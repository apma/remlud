/*************** BEGIN 03.05.01.SqlDataProvider ************************/

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_ListEntriesByPortal') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_ListEntriesByPortal
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_ListEntriesByPortal
@PortalID int,
@BlogDate datetime = null,
@ShowNonPublic bit = 0,
@ShowNonPublished bit=0,
@MaxEntries int = 10

AS

If @BlogDate IS NULL SET @BlogDate = GetUTCDate()
SET rowcount @MaxEntries
	SELECT
		U.[UserID],
		U.[Username],
		U.[FirstName] + ' ' + U.[LastName] AS UserFullName,
		E.[EntryID],
		E.[BlogID], 
		E.[Title],
		E.[Description],
		E.[Entry],
		E.[AddedDate],
		E.[Published],
		E.[Copyright],
		E.[PermaLink],
		IsNull(E.[AllowComments],B.[AllowComments]) As AllowComments,
		B.[ParentBlogID],
		B.[AllowAnonymous],
		B.[Syndicated] AS BlogSyndicated,
		B.[Public] AS BlogPublic,
		B.[SyndicationEmail] as SyndicationEmail,
		(Select Count(*) FROM {databaseOwner}{objectQualifier}Blog_Comments WHERE EntryID = E.EntryID AND (Approved = 1 OR Approved <> @ShowNonPublic)) As CommentCount
	FROM   {databaseOwner}{objectQualifier}Blog_Blogs B INNER JOIN
		{databaseOwner}{objectQualifier}Blog_Entries E ON B.[BlogID] = E.[BlogID] INNER JOIN
		{databaseOwner}{objectQualifier}Users U ON B.[UserID] = U.[UserID]
	WHERE B.PortalID = @PortalID AND E.AddedDate <=@BlogDate
	AND (E.[Published] = 1 OR E.[Published] <> @ShowNonPublished)
	AND (B.[Public] = 1 OR B.[Public] <> @ShowNonPublic)
	ORDER BY E.AddedDate DESC
	
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_ListEntriesByPortalByDay') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_ListEntriesByPortalByDay

GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_ListEntriesByPortalByDay
@PortalID int,
@BlogDate datetime = null,
@ShowNonPublic bit = 0,
@ShowNonPublished bit=0,
@MaxEntries int = 10

AS

If @BlogDate IS NULL SET @BlogDate = GetUTCDate()
SET rowcount @MaxEntries
	SELECT
		U.[UserID],
		U.[Username],
		U.[FirstName] + ' ' + U.[LastName] AS UserFullName,
		E.[EntryID],
		E.[BlogID], 
		E.[Title],
		E.[Description],
		E.[Entry],
		E.[AddedDate],
		E.[Published],
		E.[Copyright],
		E.[PermaLink],
		IsNull(E.[AllowComments],B.[AllowComments]) As AllowComments,
		B.[ParentBlogID],
		B.[AllowAnonymous],
		B.[Syndicated] AS BlogSyndicated,
		B.[Public] AS BlogPublic,
		B.[SyndicationEmail] as SyndicationEmail,
		(Select Count(*) FROM {databaseOwner}{objectQualifier}Blog_Comments WHERE EntryID = E.EntryID AND (Approved = 1 OR Approved <> @ShowNonPublic)) As CommentCount
	FROM  {databaseOwner}{objectQualifier}Blog_Blogs B INNER JOIN
		{databaseOwner}{objectQualifier}Blog_Entries E ON B.[BlogID] = E.[BlogID] INNER JOIN
		{databaseOwner}{objectQualifier}Users U ON B.[UserID] = U.[UserID]
	WHERE 
	B.PortalID = @PortalID AND
	E.AddedDate BETWEEN @BlogDate AND DateAdd( dd, 1, @BlogDate ) 

AND (E.[Published] = 1 OR E.[Published] <> @ShowNonPublished)
	AND (B.[Public] = 1 OR B.[Public] <> @ShowNonPublic)
	ORDER BY E.AddedDate DESC

GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_ListEntriesByPortalByMonth') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_ListEntriesByPortalByMonth

GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_ListEntriesByPortalByMonth
@PortalID int,
@BlogDate datetime = null,
@ShowNonPublic bit = 0,
@ShowNonPublished bit=0,
@MaxEntries int = 10

AS

If @BlogDate IS NULL SET @BlogDate = GetUTCDate()
SET rowcount @MaxEntries
	SELECT
		U.[UserID],
		U.[Username],
		U.[FirstName] + ' ' + U.[LastName] AS UserFullName,
		E.[EntryID],
		E.[BlogID], 
		E.[Title],
		E.[Description],
		E.[Entry],
		E.[AddedDate],
		E.[Published],
		E.[Copyright],
		E.[PermaLink],
		IsNull(E.[AllowComments],B.[AllowComments]) As AllowComments,
		B.[ParentBlogID],
		B.[AllowAnonymous],
		B.[Syndicated] AS BlogSyndicated,
		B.[Public] AS BlogPublic,
		B.[SyndicationEmail] as SyndicationEmail,
		(Select Count(*) FROM {databaseOwner}{objectQualifier}Blog_Comments WHERE EntryID = E.EntryID AND (Approved = 1 OR Approved <> @ShowNonPublic)) As CommentCount
	FROM  {databaseOwner}{objectQualifier}Blog_Blogs B INNER JOIN
		{databaseOwner}{objectQualifier}Blog_Entries E ON B.[BlogID] = E.[BlogID] INNER JOIN
		{databaseOwner}{objectQualifier}Users U ON B.[UserID] = U.[UserID]
	WHERE 
	B.PortalID = @PortalID AND
	E.AddedDate BETWEEN DATEADD(month, DATEDIFF(month, 0, @BlogDate), 0)  AND @BlogDate AND E.AddedDate <=  GetUTCDate()
AND (E.[Published] = 1 OR E.[Published] <> @ShowNonPublished)
	AND (B.[Public] = 1 OR B.[Public] <> @ShowNonPublic)
	ORDER BY E.AddedDate DESC
	
GO

/*************** END 03.05.01.SqlDataProvider ************************/
