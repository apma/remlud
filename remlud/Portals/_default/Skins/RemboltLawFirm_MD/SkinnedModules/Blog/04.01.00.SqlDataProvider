/*************** TABLES ************************/

DECLARE @defname VARCHAR(100), @cmd VARCHAR(1000)

SELECT @defname = sc.name 
FROM sys.columns st INNER JOIN sys.default_constraints sc
ON st.object_id = sc.parent_object_id 
WHERE st.name = 'EnableTwitterIntegration'

SET @cmd = 'ALTER TABLE {databaseOwner}{objectQualifier}Blog_Blogs DROP CONSTRAINT ' + @defname

EXEC(@cmd)
GO

ALTER TABLE {databaseOwner}{objectQualifier}Blog_Blogs
DROP COLUMN    [EnableTwitterIntegration]
GO

ALTER TABLE {databaseOwner}{objectQualifier}Blog_Blogs
DROP COLUMN        [TwitterUsername]
GO

ALTER TABLE {databaseOwner}{objectQualifier}Blog_Blogs
DROP COLUMN        [TwitterPassword]
GO

ALTER TABLE {databaseOwner}{objectQualifier}Blog_Blogs
DROP COLUMN        [TweetTemplate]
GO

-- various cleanup
UPDATE {databaseOwner}{objectQualifier}Blog_Blogs
SET TimeZone=0
WHERE TimeZone IS NULL
GO

UPDATE {databaseOwner}{objectQualifier}Blog_Blogs
SET SyndicateIndependant=0
WHERE SyndicateIndependant IS NULL
GO

UPDATE {databaseOwner}{objectQualifier}Blog_Entries
SET AllowComments=0
WHERE AllowComments IS NULL
GO


/*************** PROCEDURES ************************/

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_UpdateBlog') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_UpdateBlog
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_UpdateBlog
    @PortalID int,
    @BlogID int, 
    @ParentBlogID int = -1,
    @UserID int, 
    @Title nvarchar(512), 
    @Description nvarchar(1024), 
    @Public bit, 
    @AllowComments bit, 
    @AllowAnonymous bit,
    @ShowFullName bit,
    @Culture nvarchar(10),
    @DateFormat nvarchar(50),
    @TimeZone int,
    @Syndicated bit,
    @SyndicateIndependant bit,
    @SyndicationURL nvarchar(1024),
    @SyndicationEmail nvarchar(255),
    @EmailNotification bit,
    @AllowTrackbacks bit,
    @AutoTrackback bit,
    @MustApproveComments bit,
    @MustApproveAnonymous bit,
    @MustApproveTrackbacks bit,
    @UseCaptcha bit
AS

UPDATE {databaseOwner}{objectQualifier}Blog_Blogs SET
    [PortalID] = @PortalID,
    [ParentBlogID] = @ParentBlogID,
    [UserID] = @UserID,
    [Title] = @Title,
    [Description] = @Description,
    [Public] = @Public,
    [AllowComments] = @AllowComments,
    [AllowAnonymous] = @AllowAnonymous,
    [ShowFullName] = @ShowFullName,
    [Culture] = @Culture,
    [DateFormat] = @DateFormat,
    [TimeZone] = @TimeZone,
    [Syndicated] = @Syndicated,
    [SyndicateIndependant] = @SyndicateIndependant,
    [SyndicationURL] = @SyndicationURL,
    [SyndicationEmail] = @SyndicationEmail,
    [EmailNotification] = @EmailNotification,
    [AllowTrackbacks] = @AllowTrackbacks,
    [AutoTrackback] = @AutoTrackback,
    [MustApproveComments] = @MustApproveComments,
    [MustApproveAnonymous] = @MustApproveAnonymous,
    [MustApproveTrackbacks] = @MustApproveTrackbacks,
    [UseCaptcha] = @UseCaptcha
WHERE
    [BlogID] = @BlogID

GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_AddBlog') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_AddBlog
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_AddBlog
    @PortalID int,
    @ParentBlogID int = -1,
    @UserID int,
    @Title nvarchar(512),
    @Description nvarchar(1024),
    @Public bit,
    @AllowComments bit,
    @AllowAnonymous bit,
    @ShowFullName bit,
    @Culture nvarchar(10),
    @DateFormat nvarchar(50),
    @TimeZone int,
    @Syndicated bit,
    @SyndicateIndependant bit,
    @SyndicationURL nvarchar(1024),
    @SyndicationEmail nvarchar(255),
    @EmailNotification bit,
    @AllowTrackbacks bit,
    @AutoTrackback bit,
    @MustApproveComments bit,
    @MustApproveAnonymous bit,
    @MustApproveTrackbacks bit,
    @UseCaptcha bit
AS

INSERT INTO {databaseOwner}{objectQualifier}Blog_Blogs (
    [PortalID],
    [ParentBlogID],
    [UserID],
    [Title],
    [Description],
    [Public],
    [AllowComments],
    [AllowAnonymous],
    [ShowFullName],
    [Culture],
    [DateFormat],
    [TimeZone],
    [Created],
    [Syndicated],
    [SyndicateIndependant],
    [SyndicationURL],
    [SyndicationEmail],
    [EmailNotification],
    [AllowTrackbacks],
    [AutoTrackback],
    [MustApproveComments],
    [MustApproveAnonymous],
    [MustApproveTrackbacks],
    [UseCaptcha]
) VALUES (
    @PortalID,
    @ParentBlogID,
    @UserID,
    @Title,
    @Description,
    @Public,
    @AllowComments,
    @AllowAnonymous,
    @ShowFullName,
    @Culture,
    @DateFormat,
    @TimeZone,
    GetUTCDate(),
    @Syndicated,
    @SyndicateIndependant,
    @SyndicationURL,
    @SyndicationEmail,
    @EmailNotification,
    @AllowTrackbacks,
    @AutoTrackback,
    @MustApproveComments,
    @MustApproveAnonymous,
    @MustApproveTrackbacks,
    @UseCaptcha
)

select SCOPE_IDENTITY()

GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_AddComment') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_AddComment
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_AddComment
    @EntryID int,
    @UserID int,
    @Title nvarchar(255),
    @Comment ntext,
    @Author nvarchar(50),
    @Approved bit,
    @Website nvarchar(255),
    @Email nvarchar(255),
@AddedDate datetime
AS


INSERT INTO {databaseOwner}{objectQualifier}Blog_Comments (
    [EntryID],
    [UserID],
    [Title],
    [Comment],
    [Author],
    [Approved],
    [AddedDate],
    [Website],
    [Email]

) VALUES (
    @EntryID,
    @UserID,
    @Title,
    @Comment,
    @Author,
    @Approved,
    COALESCE(@AddedDate, GetUTCDate()),
    @Website,
    @Email
)

select SCOPE_IDENTITY()

GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_UpdateComment') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_UpdateComment
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_UpdateComment
    @CommentID int, 
    @EntryID int, 
    @UserID int, 
    @Title nvarchar(255),
    @Comment ntext,
    @Author nvarchar(50),
    @Approved bit,
    @Website nvarchar(255),
    @Email nvarchar(255),
@AddedDate datetime
AS

UPDATE {databaseOwner}{objectQualifier}Blog_Comments SET
    [EntryID] = @EntryID,
    [UserID] = @UserID,
    [Title] = @Title,
    [Comment] = @Comment,
    [Author] = @Author,
    [Approved] = @Approved,
    [AddedDate] = COALESCE(@AddedDate, GetUTCDate()),
    [Website] = @Website,
    [Email] = @Email
WHERE
    [CommentID] = @CommentID


GO

/*************** Blog Retrieval SPROCS ************************/

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_GetBlog') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_GetBlog
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_GetBlog
@BlogID int

AS

SELECT
B.*,
U.[UserName],
U.[DisplayName] AS UserFullName,
(SELECT Count(BlogID) FROM {databaseOwner}{objectQualifier}Blog_Blogs WHERE ParentBlogID=B.[BlogID]) AS ChildBlogCount
FROM
{databaseOwner}{objectQualifier}Blog_Blogs B
INNER JOIN 
{databaseOwner}{objectQualifier}Users U ON B.[UserID] = U.[UserID]
WHERE
[BlogID] = @BlogID

GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_GetBlogsByUserName') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_GetBlogsByUserName
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_GetBlogsByUserName 
@PortalID int,
@UserName nvarchar(100)

AS

DECLARE @BlogID int

SELECT
B.*,
U.[UserName],
U.[DisplayName],
(SELECT Count(BlogID) FROM {databaseOwner}{objectQualifier}Blog_Blogs WHERE ParentBlogID=B.[BlogID]) AS ChildBlogCount
FROM
{databaseOwner}{objectQualifier}Blog_Blogs B (nolock)
INNER JOIN 
{databaseOwner}{objectQualifier}Users U (nolock) ON B.[UserID] = U.[UserID]
WHERE
U.UserName = @UserName
AND B.PortalID=@PortalID 
ORDER BY B.[Title]

GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_ListBlogs') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_ListBlogs
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_ListBlogs
@PortalID int,
@ParentBlogID int,
@ShowNonPublic bit
AS

SELECT
B.*,
U.[UserName],
U.[DisplayName] AS UserFullName,
(SELECT Count(BlogID) FROM {databaseOwner}{objectQualifier}Blog_Blogs WHERE ParentBlogID=B.[BlogID]) AS ChildBlogCount
FROM
{databaseOwner}{objectQualifier}Blog_Blogs B
INNER JOIN 
{databaseOwner}{objectQualifier}Users U ON B.[UserID] = U.[UserID]
WHERE B.[PortalID] = @PortalID AND (B.[Public] = 1 OR B.[Public] <> @ShowNonPublic) AND (B.[ParentBlogID] = @ParentBlogID)

GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_ListBlogsByPortal') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_ListBlogsByPortal
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_ListBlogsByPortal
@PortalID int,
@ShowNonPublic bit
AS

SELECT
B.*,
U.[UserName],
U.[DisplayName] AS UserFullName,
(SELECT Count(BlogID) FROM {databaseOwner}{objectQualifier}Blog_Blogs WHERE ParentBlogID=B.[BlogID]) AS ChildBlogCount
FROM
{databaseOwner}{objectQualifier}Blog_Blogs B
INNER JOIN 
{databaseOwner}{objectQualifier}Users U ON B.[UserID] = U.[UserID]
WHERE B.[PortalID] = @PortalID AND (B.[Public] = 1 OR B.[Public] <> @ShowNonPublic)

GO

/*************** Entry Retrieval SPROCS ************************/

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_GetEntry') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_GetEntry
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_GetEntry
@EntryID int,
@PortalId int
AS

SELECT
E.*,
B.[UserID],
B.[SyndicationEmail],
U.[UserName],
U.[DisplayName] AS UserFullName,
(Select Count(*) FROM {databaseOwner}{objectQualifier}Blog_Comments WHERE EntryID = E.EntryID AND Approved = 1) As CommentCount
FROM
{databaseOwner}{objectQualifier}Blog_Entries E 
INNER JOIN {databaseOwner}{objectQualifier}Blog_Blogs B ON B.BlogID = E.BlogID 
INNER JOIN {databaseOwner}{objectQualifier}Users U ON U.UserID = B.UserID
WHERE
E.[EntryID] = @EntryID and
B.PortalId = @PortalId
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_ListAllEntriesByCategory') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_ListAllEntriesByCategory
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_ListAllEntriesByCategory
 @PortalID int,
 @CatID int,
 @ShowNonPublic bit = 0,
 @ShowNonPublished bit=0

AS
BEGIN
SET NOCOUNT ON;
SELECT
 E.*,
 B.[UserID],
 B.[SyndicationEmail],
 U.[UserName],
 U.[DisplayName] AS UserFullName,
 (Select Count(*) FROM {databaseOwner}{objectQualifier}Blog_Comments WHERE EntryID = E.EntryID AND Approved = 1) As CommentCount
FROM   {databaseOwner}{objectQualifier}Blog_Blogs B INNER JOIN
 {databaseOwner}{objectQualifier}Blog_Entries E ON B.BlogID = E.BlogID INNER JOIN
 {databaseOwner}{objectQualifier}Users U ON B.UserID = U.UserID
 INNER JOIN {databaseOwner}{objectQualifier}Blog_Entry_Categories EC on E.EntryID = EC.EntryID 
WHERE B.PortalID = @PortalID
AND EC.CatID = @CatID
AND (E.Published = 1 OR E.Published <> @ShowNonPublished)
AND (B.[Public] = 1 OR B.[Public] <> @ShowNonPublic)
ORDER BY E.AddedDate DESC
END

GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_ListAllEntriesByTag') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_ListAllEntriesByTag
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_ListAllEntriesByTag
@PortalID int,
@TagID int,
@ShowNonPublic bit = 0,
@ShowNonPublished bit=0

AS
BEGIN
SET NOCOUNT ON;
SELECT
 E.*,
 B.[UserID],
 B.[SyndicationEmail],
 U.[UserName],
 U.[DisplayName] AS UserFullName,
 (Select Count(*) FROM {databaseOwner}{objectQualifier}Blog_Comments WHERE EntryID = E.EntryID AND Approved = 1) As CommentCount
FROM   {databaseOwner}{objectQualifier}Blog_Blogs B INNER JOIN
 {databaseOwner}{objectQualifier}Blog_Entries E ON B.BlogID = E.BlogID INNER JOIN
 {databaseOwner}{objectQualifier}Users U ON B.UserID = U.UserID
 INNER JOIN {databaseOwner}{objectQualifier}Blog_Entry_Tags ET on E.EntryID = ET.EntryID 
WHERE B.PortalID = @PortalID
AND ET.TagID = @TagID
AND (E.Published = 1 OR E.Published <> @ShowNonPublished)
AND (B.[Public] = 1 OR B.[Public] <> @ShowNonPublic)
ORDER BY E.AddedDate DESC

END

GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_ListAllEntriesByBlog') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_ListAllEntriesByBlog
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_ListAllEntriesByBlog
@BlogID int
AS

SELECT
E.*,
B.[UserID],
B.[SyndicationEmail],
U.[UserName],
U.[DisplayName] AS UserFullName,
(Select Count(*) FROM {databaseOwner}{objectQualifier}Blog_Comments WHERE EntryID = E.EntryID AND Approved = 1) As CommentCount

FROM {databaseOwner}{objectQualifier}Blog_Blogs B INNER JOIN
 {databaseOwner}{objectQualifier}Blog_Entries E ON B.[BlogID] = E.[BlogID] INNER JOIN
 {databaseOwner}{objectQualifier}Users U ON B.[UserID] = U.[UserID]
WHERE (B.[BlogID] = @BlogID)
ORDER BY E.AddedDate DESC

GO


if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_ListAllEntriesByPortal') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_ListAllEntriesByPortal
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_ListAllEntriesByPortal
@PortalID int,
@ShowNonPublic bit = 0,
@ShowNonPublished bit=0

AS

SELECT
E.*,
B.[UserID],
B.[SyndicationEmail],
U.[UserName],
U.[DisplayName] AS UserFullName,
(Select Count(*) FROM {databaseOwner}{objectQualifier}Blog_Comments WHERE EntryID = E.EntryID AND Approved = 1) As CommentCount
FROM   {databaseOwner}{objectQualifier}Blog_Blogs B INNER JOIN
 {databaseOwner}{objectQualifier}Blog_Entries E ON B.[BlogID] = E.[BlogID] INNER JOIN
 {databaseOwner}{objectQualifier}Users U ON B.[UserID] = U.[UserID]
WHERE B.PortalID = @PortalID 
AND (E.[Published] = 1 OR E.[Published] <> @ShowNonPublished)
AND (B.[Public] = 1 OR B.[Public] <> @ShowNonPublic)
ORDER BY E.AddedDate DESC


GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_ListEntriesByPortal') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_ListEntriesByPortal
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_ListEntriesByPortal
@PortalID int,
@BlogDate datetime = null,
@ShowNonPublic bit = 0,
@ShowNonPublished bit=0,
@MaxEntries int = 10

AS

If @BlogDate IS NULL SET @BlogDate = GetUTCDate()
SET rowcount @MaxEntries
SELECT
E.*,
B.[UserID],
B.[SyndicationEmail],
U.[UserName],
U.[DisplayName] AS UserFullName,
(Select Count(*) FROM {databaseOwner}{objectQualifier}Blog_Comments WHERE EntryID = E.EntryID AND Approved = 1) As CommentCount
FROM   {databaseOwner}{objectQualifier}Blog_Blogs B INNER JOIN
 {databaseOwner}{objectQualifier}Blog_Entries E ON B.[BlogID] = E.[BlogID] INNER JOIN
 {databaseOwner}{objectQualifier}Users U ON B.[UserID] = U.[UserID]
WHERE B.PortalID = @PortalID AND E.AddedDate <=@BlogDate
AND (E.[Published] = 1 OR E.[Published] <> @ShowNonPublished)
AND (B.[Public] = 1 OR B.[Public] <> @ShowNonPublic)
ORDER BY E.AddedDate DESC

GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_ListEntriesByPortalByDay') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_ListEntriesByPortalByDay

GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_ListEntriesByPortalByDay
@PortalID int,
@BlogDate datetime = null,
@ShowNonPublic bit = 0,
@ShowNonPublished bit=0,
@MaxEntries int = 10

AS

If @BlogDate IS NULL SET @BlogDate = GetUTCDate()
SET rowcount @MaxEntries
SELECT
E.*,
B.[UserID],
B.[SyndicationEmail],
U.[UserName],
U.[DisplayName] AS UserFullName,
(Select Count(*) FROM {databaseOwner}{objectQualifier}Blog_Comments WHERE EntryID = E.EntryID AND Approved = 1) As CommentCount
FROM  {databaseOwner}{objectQualifier}Blog_Blogs B INNER JOIN
 {databaseOwner}{objectQualifier}Blog_Entries E ON B.[BlogID] = E.[BlogID] INNER JOIN
 {databaseOwner}{objectQualifier}Users U ON B.[UserID] = U.[UserID]
WHERE 
B.PortalID = @PortalID AND
E.AddedDate BETWEEN @BlogDate AND DateAdd( dd, 1, @BlogDate ) 
AND (E.[Published] = 1 OR E.[Published] <> @ShowNonPublished)
AND (B.[Public] = 1 OR B.[Public] <> @ShowNonPublic)
ORDER BY E.AddedDate DESC

GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_ListEntriesByPortalByMonth') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_ListEntriesByPortalByMonth

GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_ListEntriesByPortalByMonth
@PortalID int,
@BlogDate datetime = null,
@ShowNonPublic bit = 0,
@ShowNonPublished bit=0,
@MaxEntries int = 10

AS

If @BlogDate IS NULL SET @BlogDate = GetUTCDate()
SET rowcount @MaxEntries
SELECT
E.*,
B.[UserID],
B.[SyndicationEmail],
U.[UserName],
U.[DisplayName] AS UserFullName,
(Select Count(*) FROM {databaseOwner}{objectQualifier}Blog_Comments WHERE EntryID = E.EntryID AND Approved = 1) As CommentCount
FROM  {databaseOwner}{objectQualifier}Blog_Blogs B INNER JOIN
 {databaseOwner}{objectQualifier}Blog_Entries E ON B.[BlogID] = E.[BlogID] INNER JOIN
 {databaseOwner}{objectQualifier}Users U ON B.[UserID] = U.[UserID]
WHERE 
B.PortalID = @PortalID AND
E.AddedDate BETWEEN DATEADD(month, DATEDIFF(month, 0, @BlogDate), 0)  AND @BlogDate AND E.AddedDate <=  GetUTCDate()
AND (E.[Published] = 1 OR E.[Published] <> @ShowNonPublished)
AND (B.[Public] = 1 OR B.[Public] <> @ShowNonPublic)
ORDER BY E.AddedDate DESC

GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Blog_ListEntriesByBlog') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure {databaseOwner}{objectQualifier}Blog_ListEntriesByBlog
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}Blog_ListEntriesByBlog
@BlogID int,
@BlogDate datetime = null,
@ShowNonPublic bit = 0,
@ShowNonPublished bit=0,
@MaxEntries int =10

AS

If @BlogDate IS NULL SET @BlogDate = GetUTCDate()

SET rowcount @MaxEntries
SELECT
 E.*,
 B.[UserID],
 B.[SyndicationEmail],
 U.[UserName],
 U.[DisplayName] AS UserFullName,
 (Select Count(*) FROM {databaseOwner}{objectQualifier}Blog_Comments WHERE EntryID = E.EntryID AND Approved = 1) As CommentCount
FROM   {databaseOwner}{objectQualifier}Blog_Blogs B INNER JOIN
 {databaseOwner}{objectQualifier}Blog_Entries E ON B.[BlogID] = E.[BlogID] INNER JOIN
 {databaseOwner}{objectQualifier}Users U ON B.[UserID] = U.[UserID]
WHERE (B.[BlogID] = @BlogID OR B.[ParentBlogID] = @BlogID)
 AND E.AddedDate <=@BlogDate
 AND (E.[Published] = 1 OR E.[Published] <> @ShowNonPublished)
 AND (B.[Public] = 1 OR B.[Public] <> @ShowNonPublic)
ORDER BY E.AddedDate DESC

GO